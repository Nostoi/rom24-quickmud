name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest pytest-cov mypy ruff flake8 jsonschema bcrypt
      - name: Lint
        run: |
          ruff check mud/net mud/commands/dispatcher.py mud/commands/olc.py mud/update.py mud/security/hash_utils.py mud/account/account_service.py tests/test_telnet_server.py tests/test_ansi.py tests/test_login_flow.py tests/test_update_loop.py tests/test_olc.py tests/test_scripted_session.py tests/test_hash_utils.py tests/test_account_auth.py
          flake8 mud/net mud/commands/dispatcher.py mud/commands/olc.py mud/update.py mud/security/hash_utils.py mud/account/account_service.py tests/test_telnet_server.py tests/test_ansi.py tests/test_login_flow.py tests/test_update_loop.py tests/test_olc.py tests/test_scripted_session.py tests/test_hash_utils.py tests/test_account_auth.py
      - name: Type check
        run: |
          mypy --follow-imports=skip mud/net/connection.py mud/commands/dispatcher.py mud/commands/olc.py mud/update.py mud/security/hash_utils.py mud/account/account_service.py tests/test_telnet_server.py tests/test_ansi.py tests/test_login_flow.py tests/test_update_loop.py tests/test_olc.py tests/test_scripted_session.py tests/test_hash_utils.py tests/test_account_auth.py
      - name: Test with coverage
        run: |
          pytest --cov=mud --cov-report=term --cov-fail-under=80 -k "not scripted_session"
          pytest tests/test_scripted_session.py
